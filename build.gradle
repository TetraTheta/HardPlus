//file:noinspection SpellCheckingInspection

// Required Environment Variables:
// MODRINTH_TOKEN : Token for Modrinth Publish
// HANGAR_TOKEN : Token for Hangar Publish

plugins {
  id("java")
  id("co.uzzu.dotenv.gradle") version "4.0.0"
  id("com.modrinth.minotaur") version "2.+"
  id("io.papermc.hangar-publish-plugin") version "0.1.2"
}

group = "io.github.tetratheta"
version = "2.6.1"

def verMC = "1.21.4" // Minecraft (Modrinth, Hangar)
def verAPI = "1.21.4" // API (dependencies & plugin.yml)
def verPaper = "1.21.4-R0.1-SNAPSHOT" // Paper (Paper)
def releaseChannel = "release" // Release Channel (Modrinth & Hangar)

repositories {
  mavenCentral()
  maven {
    url = uri("https://repo.papermc.io/repository/maven-public/")
  }
  maven {
    url = uri("https://oss.sonatype.org/content/groups/public/")
  }
}

dependencies {
  compileOnly("io.papermc.paper:paper-api:$verPaper")
}

def targetJavaVersion = 21

java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = "UTF-8"
  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release.set(targetJavaVersion)
  }
}

processResources {
  def props = ["version": version, "api_version": verAPI]
  inputs.properties(props)
  filteringCharset("UTF-8")
  filesMatching("paper-plugin.yml") {
    expand(props)
  }
}

// Publish
modrinth {
  token = env.fetch("MODRINTH_TOKEN") //System.getenv("MODRINTH_TOKEN")
  projectId = "hardplus"
  versionType = releaseChannel
  uploadFile = jar
  gameVersions = [verMC]
  loaders = ["paper"]
  syncBodyFrom = rootProject.file("README.md").text
}

hangarPublish {
  publications.register("HardPlus") {
    version = version as String
    id = "HardPlus"
    channel = releaseChannel
    apiKey = env.fetch("HANGAR_TOKEN") // System.getenv("HANGAR_TOKEN")
    platforms {
      paper {
        jar = tasks.jar.archiveFile
        platformVersions = [verMC]
      }
    }
  }
}

// Cache
configurations.configureEach {
  resolutionStrategy.cacheChangingModulesFor(7, "days")
}
